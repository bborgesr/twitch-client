{"version":3,"file":"static/webpack/static/development/pages/channel.js.0c17c6896c1b16822384.hot-update.js","sources":["webpack:///./pages/channel.js"],"sourcesContent":["import Layout from '../components/Splash.js'\nimport fetch from 'isomorphic-unfetch'\n\nexport default class Stream extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { stream: props.stream }\n    this.updateViewers = this.updateViewers.bind(this)\n  }\n\n  static async getInitialProps(context) {\n    const { name } = context.query\n    const res = await fetch(`https://api.twitch.tv/helix/streams?user_login=${name}`, {\n      headers: { \"Client-ID\": \"o3ldtpya38q9y4y5y6rg98gqycz3pt\" }\n    })\n    const stream = await res.json()\n    return { name: name, stream: stream }\n  }\n\n  componentDidMount() {\n    // Call the API every 3 seconds to keep the \"Live viewers\" output relatively live\n    this.timerID = setInterval(this.updateViewers, 3000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  updateViewers() {\n    fetch(`https://api.twitch.tv/helix/streams?user_login=${this.props.name}`, {\n      headers: { \"Client-ID\": \"o3ldtpya38q9y4y5y6rg98gqycz3pt\" }\n    }).then(res => res.json())\n      .then(json => this.setState({ stream: json }))\n  }\n\n  render() {\n    return (\n      <Layout>\n        <iframe src={`https://player.twitch.tv/?channel=${this.props.name.toLowerCase()}`}>\n        </iframe>\n        <p>{this.state.stream.data[0].title}</p>\n        <p>{\"By: \" + this.props.name}</p>\n        <p>{\"Live viewers: \" + this.state.stream.data[0].viewer_count}</p>\n      </Layout>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAHA;AAIA;AACA;;;AAUA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AAEA;AAAA;AAOA;;;;;;AAnCA;;;;;;AACA;;AACA;AACA;AAAA;AAAA;AADA;AACA;;AADA;;AAGA;AACA;;AADA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AAdA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}